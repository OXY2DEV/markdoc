*markdoc*                                                   Markdown 🤝 Vimdoc

                                   ✨ markdoc                                  

            A feature rich markdown to vimdoc converter for pandoc.           

------------------------------------------------------------------------------
Table of contents:                                                            

 Limitations •••••••••••••••••••••••••••••••••••••••••••••••• |markdoc-limit| 
 Features •••••••••••••••••••••••••••••••••••••••••••••••• |markdoc-features| 
 Configuration ••••••••••••••••••••••••••••••••••••••••••••• |markdoc-config| 
 Usage •••••••••••••••••••••••••••••••••••••••••••••••••••••• |markdoc-usage| 

------------------------------------------------------------------------------
🥅 Goals
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ Goal                                ┃ Progress                            ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ Basic markdown syntax support       │ Complete                            │
├─────────────────────────────────────┼─────────────────────────────────────┤
│ Basic HTML support                  │ Complete                            │
├─────────────────────────────────────┼─────────────────────────────────────┤
│ Handling of `\n` in HTML            │ Complete                            │
├─────────────────────────────────────┼─────────────────────────────────────┤
│ Allowing text alignment             │ Complete                            │
├─────────────────────────────────────┼─────────────────────────────────────┤
│ Callout support                     │ Complete                            │
├─────────────────────────────────────┼─────────────────────────────────────┤
│ Wrap for nested elements            │ Complete                            │
├─────────────────────────────────────┼─────────────────────────────────────┤
│ Ability to change configuration per │ Complete                            │
│ file                                │                                     │
├─────────────────────────────────────┼─────────────────────────────────────┤
│ Ability to place TOC anywhere       │ Complete                            │
├─────────────────────────────────────┼─────────────────────────────────────┤
│ Handling LaTeX                      │ None                                │
├─────────────────────────────────────┼─────────────────────────────────────┤
│ Handling characters with varying    │ None                                │
│ widths                              │                                     │
├─────────────────────────────────────┼─────────────────────────────────────┤
│ More syntax support(HTML, Markdown) │ None                                │
└─────────────────────────────────────┴─────────────────────────────────────┘

------------------------------------------------------------------------------
💥 Features                                  *markdoc-features* *markdoc-feat*

  • Config per file, allows configuring `markdoc` using YAML metadata.
  • Tag(s) per heading, allows using Lua patterns to add one or more tags to
    matching headings.
  • Creating TOCs, allows creating Table of contents via YAML.
  • Callout & title support, supports callouts(even custom ones) and titles
    for block quotes.
  • Prettier table rendering, tables can be created with custom borders with
    text wrapping support.
  • Nesting support, supports nesting of block elements.
  • Base HTML support, supports basic HTML tags.
  • `align=""` support, allows aligning text via HTML.

------------------------------------------------------------------------------
📚 Usage                                                       *markdoc-usage*

You only need the `markdoc.lua` file. So, just copy it to your desired
location.

You can then run it like so,

>shell
  pandoc -t path/to/markdoc.lua README.md -o help.txt
<

------------------------------------------------------------------------------
🪨 Limitations                           *markdoc-limitations* *markdoc-limit*

▌ Important!
▌ `markdoc` is best-effort only. It’s not perfect but for most use cases it
▌ should be good enough.

  • Whitespace loss, due to the nature of syntax trees the whitespace in the
    document may not be preserved.
  • Issues with complex characters, some UTF-8 characters don’t get properly
    wrapped(either due to multi-byte width or limitation of Lua).
  • Issues with complex document structures, though `markdoc` should support
    complex documents it is still preferable to keep them simple.
    
    You may encounter text wrapping issues if the document gets too deeply
    nested(due to lack of space).

------------------------------------------------------------------------------
🔩 Configuration                                       *markdoc-configuration*
                                                              *markdoc-config*
                        “One function to rule them all,                       
                          One function to find them,                          
                        One function to bring them all,                       
                        And in the darkness bind them.”                       

You can configure `markdoc` for a file by adding a YAML metadata section to
the start of the file.

It should look something like this,

>md
  ---
  markdoc:
    textwidth: 78
    title: "Markdown 🤝 Vimdoc"
    title_tag: "markdoc"
  
    tags:
      Features$: [ "markdoc-features", "markdoc-feat" ]
      Usage$: [ "markdoc-usage" ]
  ---
  Some text.
<

▌ Note
▌ All configuration options should be inside `markdoc`.

The configuration options are given below,

block_quotes ~

Changes block quote configuration.

EXAMPLE

>yaml
    block_quotes:
      default:
        border: "║"
  
      # Name SHOULD be in lowercase.
      # This will match any variation of,
      # [!CUSTOM]
      custom:
        border: "┊" # Block quote border
        callout: "🎵 Custom" # Text to show at the top
        icon: "🎵" # Icon before title(if there is any).
<

fold_refs ~

When `true`, link & image references are folded.

EXAMPLE

>yaml
    fold_refs: true
<

foldmarkers ~

Markers used for folding.

EXAMPLE

>yaml
    # This is the same as `:set foldmarker`
    foldmarkers: "{{{,}}}"
<

tags ~

Tag configuration for different headings.

EXAMPLE

>yaml
      tags:
        # The key is a Lua patter.
        Features$: [ "markdoc-features", "markdoc-feat" ] # Adds 2 tags to headings ending with Feature.
        Usage$: [ "markdoc-usage" ]
<

table ~

Table configuration.

EXAMPLE

>yaml
      table:
        col_minwidth: 10 # Minimum width for columns.
  
        top: [ "╭", "─", "╮", "┬" ]
        header: [ "│", "│", "│" ]
  
        separator: [ "├", "─", "┤", "┼" ]
        header_separator: [ "├", "─", "┤", "┼" ]
        row_separator: [ "├", "─", "┤", "┼" ]
  
        row: [ "│", "│", "│" ]
        bottom: [ "╰", "─", "╯", "┴" ]
<

textwidth ~

Width of the document.

EXAMPLE

>yaml
    # Same as `:set textwidth`
    textwidth: 78
<

title ~

Title of the document.

EXAMPLE

>yaml
    title: "Markdown 🤝 Vimdoc"
<

title_tag ~

Tag for the document title.

EXAMPLE

>yaml
    title_tag: "markdoc"
<

toc_title ~

Title for the generated table of contents section.
Defaults to `Table of contents:` when unset.

EXAMPLE

>yaml
    toc_title: "Markdoc: TOC"
<

toc ~

Entries for the table of contents.

▌ Note
  You can add `<MKDocTOC/>` to anywhere in your document and the table of
  contents will be placed there!
  However, It will also only replace the 1st one.

EXAMPLE

>yaml
    toc:
      "Features": "markdoc-features"
<

------------------------------------------------------------------------------

Also available in vimdoc, see `doc/markdoc.txt`.

------------------------------------------------------------------------------


vim:ft=help:tw=78:ts=2:
